TODOs:
âœ… Generate deck and cards

Deal initial hand 
    -event listener for deal button
        -deal the cards after clicking
        -end the betting phase
        -start the hit/stand phase
    -method to deal cards
        

Hit and stand functionality
    -event listener for hit
        -add to hand 
    -evaluate for bust
        -if bust then go to deal phase again (bank amount permitting)
    -event listener for stand 
        if stand then move to dealers turn 
Dealer turn functionality
    -eval hand 
        -if blackjack and no player blackjack then player loses
        -show message and new deal button 
            -check player bank and see if they can still play 
    -delay 1s before, may enhance experience
    -below 17 must hit
    -set each loop of dealer turn to have a delay after so player can register game

Compare hands 
    -if dealer bust player just wins
    -if player hand higher they win else dealer wins 
        -pay player if they win 
            -1.5x for player blackjack
    -show message 
        -congradulate if won 
        -say sorry if they lost
        -push if they tie 
    -show event listener for new deal 
    -if player out of money then offer prompt to deposit money (reinit the game)


main deck will be a constant with a shuffled deck that is copied from it for gameplay purposes
    -to make our main deck there needs to be an array of suits and an array of ranks
    -use a function to make the original deck from the two arrays
        -loop through the suits array
            -loop through the values array
                -push an object with 2 key/values to the main deck:
                    -'face' made from the suit and rank (for mapping to the css classes)
                    -'value' for determining the worth of the hand
    -make the shuffled deck using a function (use the west class to rotate 90 degrees)
        -first copy the original deck into a variable so it remains unaltered
        -make a new variable to hold the shuffled deck
        -loop through the temp deck, while the temp deck has a length more than zero:
            -grab a random index between 0 and the length of the temp deck - 1
            -splice that index from the temp deck and push it to the shuffled deck
        -return the shuffled deck from the function

Phases will be booleans so they can act as gaurds for events as well as have the render function 
check if they should be showing or not  
    -betting
        -activate chip buttons for bet 
        -hide the deal button
        -display bet amount after setting it to 0
        -change h1 to say place bet 
        -get the player to submit a valid bet then deal the cards
    -hit/stand 
        -hide bet amount
        -display pot amount and chips in the center
        -have h1 one display hit or stand
        -the player will hit/stand 
            -if hit then continue to hit until a stand or bust
            -if bust then change turn to 
    -dealers turn 
        -hide the hit and stand buttons
        -have the dealer hit until 17 hand value (unless soft 17)
            -likey use the set time out so that the player can follow along
    -determine winner
        -pay the player if they won and display the deal button

have user click deposit button to initiate game
    -initialize the player as an object containing:
        - a bank with $500
        - an empty array for the hand
        - a value that equates to the hand value
        - a method to bet money
            -make sure the bet is valid
            -subtract money from bank and add it to the pot 
    -initialize the dealer as an object containing:
        - an empty array for the hand
        - a value for the hand value
        - a boolean for if the dealer hand is showing
        - method for determing the dealer behaviour on its turn
            - get the value of the hand 
            - is it 17 or more? \
                -if so stand
                -if not hit 
                    -did dealer bust?
                        -if so player win
                        -if not is hand value 17 or more
                            -loop
    -initialize the phase to betting (1)



rendering function for the cards
    -has 2 paramaters, the deck and the container
    -access the container that will house the cards and clear its innerHTML
    -create a variable that will hold a string that will become the new innerHTML
    -loop through the cards we want to render
        -add the html element and class we want the card to be to the variable
            -the first class will be card for the css library
            -the second class will be the face property in the card object
    -change the containers innerHTML to be that of our string variable
        -it will contain all the cards in the hand (each an individual div)

Rendering funciton for controls
    -bank amount will always be visible
    -if betting phase is true show the bet amount. hide the hit, stand, deal,
    elements
    - if player action phase is true show the hit, stand elements. Hide the bet
    amount, deal elements
    -if it is the dealer action phase no controls should be shown 
    -if it is the dealing phase only the deal cards should be shown

Rendering function for information
    -bank amount should always be visible
    -If it is the first bet phase the get bet message should display and hide pot amount
    -If it is hit/stand phase the hit/stand message should display as well as pot amount
    -during dealer phase messgage to be determined show pot amount
    -evaluate and then show winner as well as the get bet message 

render hands function 
    -should just return if hands are empty(during bet phase) 
    -show all player cards during hit/stand and dealer phases\
    -hide second dealer card during hit/stand phase then show all dealer 
    cards during the dealers turn

render player chips function
    -want to show chips that player has access to for betting
        -if player has less than $50 for example then the $50 chip wont show
    - be showing at all times

render pot chips function 
    -want to show chips that player has bet in lowest total amount 
        -if pot is $55 only show a $50 and $5 chip for example